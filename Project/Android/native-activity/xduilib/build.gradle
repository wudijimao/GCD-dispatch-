apply plugin: 'com.android.model.library'

model {
    repositories {
        libs(PrebuiltLibraries) {
            rapidjson {
                headers.srcDir "/Users/ximiao/GCD-dispatch-/ThirdParty/"
            }
            curl {
                headers.srcDir "/Users/ximiao/GCD-dispatch-/ThirdParty/curl/android"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("/Users/ximiao/GCD-dispatch-/ThirdParty/prebuilt/android/${targetPlatform.getName()}/libcurl.a")
                }
            }
            png {
                headers.srcDir "/Users/ximiao/GCD-dispatch-/ThirdParty/png/android"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("/Users/ximiao/GCD-dispatch-/ThirdParty/prebuilt/android/${targetPlatform.getName()}/libpng.a")
                }
            }
        }
    }

    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.2"
        defaultConfig.with {
            minSdkVersion.apiLevel = 9
            targetSdkVersion.apiLevel = 23
            versionCode = 1
            versionName = "0.0.1"
        }
        ndk {
            moduleName = 'xduilib'
            stl = 'c++_static'
            cppFlags.add("-std=c++11")
            ldFlags.add("-c")
            ldLibs.addAll(['log', 'android', 'EGL', 'GLESv1_CM'])
        }
        sources {
            main {
                jniLibs {

                }
                jni {
                    source {
                        srcDir "/Users/ximiao/GCD-dispatch-/include"
                        exclude "**/XLog.cpp"
                        exclude "**/XRenderFacotry.cpp"
                        exclude "**/GlobalStatus.cpp"
                        exclude "/Users/ximiao/GCD-dispatch-/include/win32/*.cpp"
                        exclude "/Users/ximiao/GCD-dispatch-/include/ios/*.cpp"
                    }
                    exportedHeaders {
                        srcDir "/Users/ximiao/GCD-dispatch-/include"
                    }
                    dependencies {
                        library "curl" linkage 'static'
                        library "png" linkage 'static'
                        library "rapidjson" linkage 'static'
                    }
                }
            }
        }
    }
}
