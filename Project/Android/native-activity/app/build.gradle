apply plugin: 'com.android.model.application'

model {
    repositories {
        libs(PrebuiltLibraries) {
            curl {
                headers.srcDir "${xdui_third_path}curl/android"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("${xdui_third_lib_path}${targetPlatform.getName()}/libcurl.a")
                }
            }
            curl_crypto {
                headers.srcDir "${xdui_third_path}curl/android"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("${xdui_third_lib_path}${targetPlatform.getName()}/libcrypto.a")
                }
            }
            curl_ssl {
                headers.srcDir "${xdui_third_path}curl/android"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("${xdui_third_lib_path}${targetPlatform.getName()}/libssl.a")
                }
            }
            png {
                headers.srcDir "${xdui_third_path}png/android"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("${xdui_third_lib_path}${targetPlatform.getName()}/libpng.a")
                }
            }
            jpeg {
                headers.srcDir "${xdui_third_path}jpeg/android"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("${xdui_third_lib_path}${targetPlatform.getName()}/libjpeg.a")
                }
            }
            freetype {
                headers.srcDir "${xdui_third_path}freetype2/android"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("${xdui_third_lib_path}${targetPlatform.getName()}/libfreetype.a")
                }
            }
            gif {
                headers.srcDir "${xdui_third_path}gif"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("${xdui_third_lib_path}${targetPlatform.getName()}/libgiflib.a")
                }
            }
            zlib {
                headers.srcDir "${xdui_third_path}zlib"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("${xdui_third_lib_path}${targetPlatform.getName()}/libz.a")
                }
            }
        }
    }
    android {
        compileSdkVersion = 23
        buildToolsVersion = '23.0.2'

        defaultConfig {
            applicationId = 'com.moemiku.test_app'
            minSdkVersion.apiLevel = 19
            targetSdkVersion.apiLevel = 23
        }

        sourceSets {
            main {
                //assets.srcDirs = ["${xdui_root_path}XDUILIB.bundle/"]
                //assets.srcDirs = ['assets']
            }
        }

        ndk {
            platformVersion = 21
            moduleName = 'xduilib' //warnning: Do not change this name, it will load in JNIBridgeForNativeActivity.java
            //toolchain = 'clang'
            stl = 'c++_static'
            abiFilters.addAll(['armeabi', 'armeabi-v7a', 'armeabi-v8a'])
            cppFlags.add('-std=c++11')
            cppFlags.add('-fexceptions')
            cppFlags.add('-frtti')
//            cppFlags.add("-I${xdui_root_path}include")
//            cppFlags.add("-I${xdui_third_path}")
//            cppFlags.add("-I${xdui_third_path}asio")
            ldLibs.addAll(['log', 'android', 'EGL', 'GLESv3', 'atomic'])
        }
        sources {
            main {
                jni {
                    source {
                        srcDir "${xdui_root_path}TestCode/"
                    }
                    dependencies {
                        library "curl" linkage 'static'
                        library "png" linkage 'static'
                        library "jpeg" linkage 'static'
                        library "zlib" linkage 'static'
                        library "freetype" linkage 'static'
                        library "curl_crypto" linkage 'static'
                        library "curl_ssl" linkage 'static'
                        library "gif" linkage 'static'
                        project ':nativeactivity' linkage 'static'
                        project ':xduilib' linkage 'static'
                    }
                }
                java {
                    source {
                        srcDir "src"
                    }
                }
            }
        }

        buildTypes {
            release {
                minifyEnabled = false
                proguardFiles.add(file('proguard-rules.txt'))
            }
        }
    }
}

dependencies {
    compile project(':xduilib')
    //compile fileTree(dir: 'libs', include: ['*.jar'])
    //compile 'com.android.support:appcompat-v7:23.3.0'
}